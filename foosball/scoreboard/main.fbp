#!/usr/bin/env sol-fbp-runner

# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main flow used in the scoreboard.
# It receives information from table via OIC and update leds to display
# the score. It's composed by two 7 segments leds, so it multiplexes
# them using transistors. We keep changing it in a high frequency
# so both are quickly updated.

ScoreBoard(score-counter/server-score-counter)
Timer(ScoreTimer)
LedToggle(boolean/toggle)
InitialScore(constant/int:value=0)
InitialState(constant/boolean:value=false)

Score(ScoreLed)
ScoreSwitcher(switcher/int:keep_state=true)
RedWin(RedWinLed)
YellowWin(YellowWinLed)
RedTrans(RedTransistor)
YellowTrans(YellowTransistor)

InitialScore OUT -> IN[0] ScoreSwitcher
InitialScore OUT -> IN[1] ScoreSwitcher
InitialState OUT -> IN RedWin
InitialState OUT -> IN YellowWin

ScoreBoard OUT_P1_SCORE -> IN[0] ScoreSwitcher
ScoreBoard OUT_P2_SCORE -> IN[1] ScoreSwitcher
ScoreBoard OUT_P1_WIN -> IN RedWin
ScoreBoard OUT_P2_WIN -> IN YellowWin

ScoreSwitcher OUT[0] -> VALUE Score

Timer OUT -> IN LedToggle
LedToggle OUT -> IN RedTrans
LedToggle OUT -> IN _(boolean/not) OUT -> IN YellowTrans
LedToggle OUT -> IN _(converter/boolean-to-int) OUT -> IN_PORT ScoreSwitcher
