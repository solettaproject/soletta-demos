#!/usr/bin/env sol-fbp-runner
# This file is part of the Soletta Project
#
# Copyright (C) 2015 Intel Corporation. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
#   * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#   * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in
#     the documentation and/or other materials provided with the
#     distribution.
#   * Neither the name of Intel Corporation nor the names of its
#     contributors may be used to endorse or promote products derived
#     from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# This is the main flow used in the table of foosball.
# It controls goals per match, reset scores, and communicates with
# scoreboard via OIC. When a team wins it waits for 5 seconds before
# starting next match.

DECLARE=ScoreCounter:fbp:score-counter.fbp
DECLARE=GoalsMax:fbp:goals-max.fbp

RedScore(ScoreCounter)
YellowScore(ScoreCounter)
Max(GoalsMax)

ResetButton(MainResetButton)

ScoreBoard(score-counter/client-score-counter:device_id="666a3d6a9d194a23b90a24573558d2f4")
Reset(converter/boolean-to-empty)
ResetWon(boolean/filter)
ResetTimer(timer:interval=3000)
TimerState(converter/empty-to-boolean:output_value=false)
Disable(constant/boolean:value=false)

RedWon(int/equal)
YellowWon(int/equal)

ResetButton OUT -> PULSE_IF_TRUE Reset
Reset OUT -> RESET RedScore
Reset OUT -> RESET YellowScore

RedScore SCORE -> IN[0] RedWon
Max MAX -> IN[1] RedWon
RedWon OUT -> IN ResetWon

YellowScore SCORE -> IN[0] YellowWon
Max MAX -> IN[1] YellowWon
YellowWon OUT -> IN ResetWon

Disable OUT -> ENABLED ResetTimer
ResetWon TRUE -> ENABLED ResetTimer
ResetTimer OUT -> IN TimerState
TimerState OUT -> ENABLED ResetTimer
TimerState OUT -> PULSE_IF_FALSE Reset

RedScore SCORE -> IN_P1_SCORE ScoreBoard
YellowScore SCORE -> IN_P2_SCORE ScoreBoard
RedWon OUT -> IN_P1_WIN ScoreBoard
YellowWon OUT -> IN_P2_WIN ScoreBoard
